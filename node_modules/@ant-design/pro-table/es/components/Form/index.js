function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

import React from 'react';
import omit from 'omit.js';
import isDeepEqualReact from 'fast-deep-equal/es6/react';
import { omitUndefined } from '@ant-design/pro-utils';
import { isBordered } from '../../utils/index';
import './index.less';
import FormRender from './FormRender';

var FormSearch = /*#__PURE__*/function (_React$Component) {
  _inherits(FormSearch, _React$Component);

  var _super = _createSuper(FormSearch);

  function FormSearch() {
    var _this;

    _classCallCheck(this, FormSearch);

    /** 查询表单相关的配置 */
    _this = _super.apply(this, arguments);

    _this.onSubmit = function (value, firstLoad) {
      var _this$props = _this.props,
          pagination = _this$props.pagination,
          _this$props$beforeSea = _this$props.beforeSearchSubmit,
          beforeSearchSubmit = _this$props$beforeSea === void 0 ? function (searchParams) {
        return searchParams;
      } : _this$props$beforeSea,
          action = _this$props.action,
          onSubmit = _this$props.onSubmit,
          onFormSearchSubmit = _this$props.onFormSearchSubmit; // 只传入 pagination 中的 current 和 pageSize 参数

      var pageInfo = pagination ? omitUndefined({
        current: pagination.current,
        pageSize: pagination.pageSize
      }) : {};

      var submitParams = _objectSpread(_objectSpread({}, value), {}, {
        _timestamp: Date.now()
      }, pageInfo);

      var omitParams = omit(beforeSearchSubmit(submitParams), Object.keys(pageInfo));
      onFormSearchSubmit(omitParams);

      if (!firstLoad) {
        var _action$current, _action$current$setPa;

        // back first page
        (_action$current = action.current) === null || _action$current === void 0 ? void 0 : (_action$current$setPa = _action$current.setPageInfo) === null || _action$current$setPa === void 0 ? void 0 : _action$current$setPa.call(_action$current, {
          current: 1
        });
      } // 不是第一次提交就不触发，第一次提交是 js 触发的
      // 为了解决 https://github.com/ant-design/pro-components/issues/579


      if (onSubmit && !firstLoad) {
        onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(value);
      }
    };

    _this.onReset = function (value) {
      var _action$current2, _action$current2$setP;

      var _this$props2 = _this.props,
          pagination = _this$props2.pagination,
          _this$props2$beforeSe = _this$props2.beforeSearchSubmit,
          beforeSearchSubmit = _this$props2$beforeSe === void 0 ? function (searchParams) {
        return searchParams;
      } : _this$props2$beforeSe,
          action = _this$props2.action,
          onFormSearchSubmit = _this$props2.onFormSearchSubmit,
          onReset = _this$props2.onReset;
      var pageInfo = pagination ? omitUndefined({
        current: pagination.current,
        pageSize: pagination.pageSize
      }) : {};
      var omitParams = omit(beforeSearchSubmit(_objectSpread(_objectSpread({}, value), pageInfo)), Object.keys(pageInfo));
      onFormSearchSubmit(omitParams); // back first page

      (_action$current2 = action.current) === null || _action$current2 === void 0 ? void 0 : (_action$current2$setP = _action$current2.setPageInfo) === null || _action$current2$setP === void 0 ? void 0 : _action$current2$setP.call(_action$current2, {
        current: 1
      });
      onReset === null || onReset === void 0 ? void 0 : onReset();
    };
    /**
     * 只 Diff 需要用的 props，能减少 5 次左右的render
     *
     * @param next
     * @see 因为 hooks 每次的 setFormSearch 都是新的，所以每次都触发 render
     * @see action 也是同样的原因
     * @returns
     */


    _this.isEqual = function (next) {
      var _this$props3 = _this.props,
          columns = _this$props3.columns,
          loading = _this$props3.loading,
          formRef = _this$props3.formRef,
          type = _this$props3.type,
          cardBordered = _this$props3.cardBordered,
          dateFormatter = _this$props3.dateFormatter,
          form = _this$props3.form,
          search = _this$props3.search,
          manualRequest = _this$props3.manualRequest;
      var diffProps = {
        columns: columns,
        loading: loading,
        formRef: formRef,
        type: type,
        cardBordered: cardBordered,
        dateFormatter: dateFormatter,
        form: form,
        search: search,
        manualRequest: manualRequest
      };
      return !isDeepEqualReact(diffProps, {
        columns: next.columns,
        formRef: next.formRef,
        loading: next.loading,
        type: next.type,
        cardBordered: next.cardBordered,
        dateFormatter: next.dateFormatter,
        form: next.form,
        search: next.search,
        manualRequest: next.manualRequest
      });
    };

    _this.shouldComponentUpdate = function (next) {
      return _this.isEqual(next);
    };

    _this.render = function () {
      var _this$props4 = _this.props,
          columns = _this$props4.columns,
          loading = _this$props4.loading,
          formRef = _this$props4.formRef,
          type = _this$props4.type,
          action = _this$props4.action,
          cardBordered = _this$props4.cardBordered,
          dateFormatter = _this$props4.dateFormatter,
          form = _this$props4.form,
          search = _this$props4.search,
          pagination = _this$props4.pagination,
          manualRequest = _this$props4.manualRequest;
      var pageInfo = pagination ? omitUndefined({
        current: pagination.current,
        pageSize: pagination.pageSize
      }) : {};
      return /*#__PURE__*/React.createElement(FormRender, {
        submitButtonLoading: loading,
        columns: columns,
        type: type,
        formRef: formRef,
        onSubmit: _this.onSubmit,
        manualRequest: manualRequest,
        onReset: _this.onReset,
        dateFormatter: dateFormatter,
        search: search,
        form: _objectSpread({
          extraUrlParams: _objectSpread(_objectSpread({}, pageInfo), form === null || form === void 0 ? void 0 : form.extraUrlParams)
        }, form),
        action: action,
        bordered: isBordered('search', cardBordered)
      });
    };

    return _this;
  }

  return FormSearch;
}(React.Component);

export default FormSearch;