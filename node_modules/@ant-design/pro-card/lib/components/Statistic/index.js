"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _antd = require("antd");

var _icons = require("@ant-design/icons");

require("./index.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Statistic = function Statistic(props) {
  var _classNames;

  var className = props.className,
      _props$layout = props.layout,
      layout = _props$layout === void 0 ? 'inline' : _props$layout,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      description = props.description,
      children = props.children,
      title = props.title,
      tip = props.tip,
      status = props.status,
      trend = props.trend,
      prefix = props.prefix,
      icon = props.icon,
      others = _objectWithoutProperties(props, ["className", "layout", "style", "description", "children", "title", "tip", "status", "trend", "prefix", "icon"]);

  var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('pro-card-statistic');
  var classString = (0, _classnames.default)(prefixCls, className);
  var statusClass = (0, _classnames.default)("".concat(prefixCls, "-status"));
  var iconClass = (0, _classnames.default)("".concat(prefixCls, "-icon"));
  var wrapperClass = (0, _classnames.default)("".concat(prefixCls, "-wrapper"));
  var contentClass = (0, _classnames.default)("".concat(prefixCls, "-content"));
  var statisticClassName = (0, _classnames.default)((_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-layout-").concat(layout), layout), _defineProperty(_classNames, "".concat(prefixCls, "-trend-").concat(trend), trend), _classNames));

  var tipDom = tip && /*#__PURE__*/_react.default.createElement(_antd.Tooltip, {
    title: tip
  }, /*#__PURE__*/_react.default.createElement(_icons.QuestionCircleOutlined, {
    className: "".concat(prefixCls, "-tip")
  }));

  var trendIconClassName = (0, _classnames.default)("".concat(prefixCls, "-trend-icon"), _defineProperty({}, "".concat(prefixCls, "-trend-icon-").concat(trend), trend));

  var trendDom = trend && /*#__PURE__*/_react.default.createElement("div", {
    className: trendIconClassName
  });

  var statusDom = status && /*#__PURE__*/_react.default.createElement("div", {
    className: statusClass
  }, /*#__PURE__*/_react.default.createElement(_antd.Badge, {
    status: status,
    text: null
  }));

  var iconDom = icon && /*#__PURE__*/_react.default.createElement("div", {
    className: iconClass
  }, icon);

  return /*#__PURE__*/_react.default.createElement("div", {
    className: classString,
    style: style
  }, iconDom, /*#__PURE__*/_react.default.createElement("div", {
    className: wrapperClass
  }, statusDom, /*#__PURE__*/_react.default.createElement("div", {
    className: contentClass
  }, /*#__PURE__*/_react.default.createElement(_antd.Statistic, _extends({
    title: (title || tipDom) && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, title, tipDom),
    prefix: (trendDom || prefix) && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, trendDom, prefix),
    className: statisticClassName
  }, others)), description && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-description")
  }, description))));
};

var _default = Statistic;
exports.default = _default;