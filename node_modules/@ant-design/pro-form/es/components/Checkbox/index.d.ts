import React from 'react';
import type { CheckboxProps } from 'antd';
import type { ProSchema } from '@ant-design/pro-utils';
import type { CheckboxGroupProps } from 'antd/lib/checkbox';
import type { ProFormItemProps } from '../../interface';
export declare type ProFormCheckboxGroupProps = ProFormItemProps<CheckboxGroupProps> & {
    layout?: 'horizontal' | 'vertical';
    options: CheckboxGroupProps['options'];
    valueEnum?: ProSchema['valueEnum'];
    request?: ProSchema['request'];
};
export declare type ProFormCheckboxProps = ProFormItemProps<CheckboxProps>;
declare const ProFormCheckbox: React.ComponentClass<{
    fieldProps?: (import("../../interface").FieldProps & CheckboxProps) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
        proFieldKey?: string | undefined;
        render?: any;
    } | undefined;
} & import("antd").FormItemProps<any> & import("../../BaseForm/createField").ExtendsProps, any> | React.FunctionComponent<{
    fieldProps?: (import("../../interface").FieldProps & CheckboxProps) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
        proFieldKey?: string | undefined;
        render?: any;
    } | undefined;
} & import("antd").FormItemProps<any> & import("../../BaseForm/createField").ExtendsProps>;
declare const Group: React.ComponentClass<{
    fieldProps?: (import("../../interface").FieldProps & CheckboxGroupProps) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
        proFieldKey?: string | undefined;
        render?: any;
    } | undefined;
} & import("antd").FormItemProps<any> & {
    layout?: "horizontal" | "vertical" | undefined;
    options: CheckboxGroupProps['options'];
    valueEnum?: ProSchema['valueEnum'];
    request?: ProSchema['request'];
} & import("../../BaseForm/createField").ExtendsProps, any> | React.FunctionComponent<{
    fieldProps?: (import("../../interface").FieldProps & CheckboxGroupProps) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
        proFieldKey?: string | undefined;
        render?: any;
    } | undefined;
} & import("antd").FormItemProps<any> & {
    layout?: "horizontal" | "vertical" | undefined;
    options: CheckboxGroupProps['options'];
    valueEnum?: ProSchema['valueEnum'];
    request?: ProSchema['request'];
} & import("../../BaseForm/createField").ExtendsProps>;
declare const WrappedProFormCheckbox: typeof ProFormCheckbox & {
    Group: typeof Group;
};
export default WrappedProFormCheckbox;
