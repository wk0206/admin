import React from 'react';
import type { UploadProps, ButtonProps } from 'antd';
import type { ProFormItemProps } from '../../interface';
export declare type ProFormDraggerProps = ProFormItemProps<UploadProps> & {
    icon?: React.ReactNode;
    title?: React.ReactNode;
    name?: UploadProps['name'];
    listType?: UploadProps['listType'];
    action?: UploadProps['action'];
    accept?: UploadProps['accept'];
    max?: number;
    value?: UploadProps['fileList'];
    onChange?: UploadProps['onChange'];
    buttonProps?: ButtonProps;
    disabled?: ButtonProps['disabled'];
    fileList?: UploadProps['fileList'];
};
declare const _default: React.ComponentClass<{
    fieldProps?: (import("../../interface").FieldProps & UploadProps<any>) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
        proFieldKey?: string | undefined;
        render?: any;
    } | undefined;
} & import("antd").FormItemProps<any> & {
    icon?: React.ReactNode;
    title?: React.ReactNode;
    name?: string | undefined;
    listType?: import("antd/lib/upload/interface").UploadListType | undefined;
    action?: string | ((file: import("antd/lib/upload").RcFile) => string) | ((file: import("antd/lib/upload").RcFile) => PromiseLike<string>) | undefined;
    accept?: string | undefined;
    max?: number | undefined;
    value?: import("antd/lib/upload/interface").UploadFile<any>[] | undefined;
    onChange?: ((info: import("antd/lib/upload").UploadChangeParam<import("antd/lib/upload/interface").UploadFile<any>>) => void) | undefined;
    buttonProps?: Partial<{
        href: string;
        target?: string | undefined;
        onClick?: React.MouseEventHandler<HTMLElement> | undefined;
    } & import("antd/lib/button/button").BaseButtonProps & import("antd/lib/_util/type").Omit<React.AnchorHTMLAttributes<any>, "type" | "onClick"> & {
        htmlType?: "button" | "submit" | "reset" | undefined;
        onClick?: React.MouseEventHandler<HTMLElement> | undefined;
    } & import("antd/lib/_util/type").Omit<React.ButtonHTMLAttributes<any>, "type" | "onClick">> | undefined;
    disabled?: boolean | undefined;
    fileList?: import("antd/lib/upload/interface").UploadFile<any>[] | undefined;
} & import("../../BaseForm/createField").ExtendsProps, any> | React.FunctionComponent<{
    fieldProps?: (import("../../interface").FieldProps & UploadProps<any>) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
        proFieldKey?: string | undefined;
        render?: any;
    } | undefined;
} & import("antd").FormItemProps<any> & {
    icon?: React.ReactNode;
    title?: React.ReactNode;
    name?: string | undefined;
    listType?: import("antd/lib/upload/interface").UploadListType | undefined;
    action?: string | ((file: import("antd/lib/upload").RcFile) => string) | ((file: import("antd/lib/upload").RcFile) => PromiseLike<string>) | undefined;
    accept?: string | undefined;
    max?: number | undefined;
    value?: import("antd/lib/upload/interface").UploadFile<any>[] | undefined;
    onChange?: ((info: import("antd/lib/upload").UploadChangeParam<import("antd/lib/upload/interface").UploadFile<any>>) => void) | undefined;
    buttonProps?: Partial<{
        href: string;
        target?: string | undefined;
        onClick?: React.MouseEventHandler<HTMLElement> | undefined;
    } & import("antd/lib/button/button").BaseButtonProps & import("antd/lib/_util/type").Omit<React.AnchorHTMLAttributes<any>, "type" | "onClick"> & {
        htmlType?: "button" | "submit" | "reset" | undefined;
        onClick?: React.MouseEventHandler<HTMLElement> | undefined;
    } & import("antd/lib/_util/type").Omit<React.ButtonHTMLAttributes<any>, "type" | "onClick">> | undefined;
    disabled?: boolean | undefined;
    fileList?: import("antd/lib/upload/interface").UploadFile<any>[] | undefined;
} & import("../../BaseForm/createField").ExtendsProps>;
export default _default;
