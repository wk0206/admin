import React from 'react';
import type { SketchPickerProps } from 'react-color';
import type { PopoverProps } from 'antd';
declare const _default: React.ComponentClass<{
    fieldProps?: (import("../../interface").FieldProps & SketchPickerProps & {
        value?: string | undefined;
        onChange?: ((color: string) => void) | undefined;
    }) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
        proFieldKey?: string | undefined;
        render?: any;
    } | undefined;
} & import("antd").FormItemProps<any> & {
    popoverProps?: PopoverProps | undefined;
    colors?: string[] | undefined;
} & import("../../BaseForm/createField").ExtendsProps, any> | React.FunctionComponent<{
    fieldProps?: (import("../../interface").FieldProps & SketchPickerProps & {
        value?: string | undefined;
        onChange?: ((color: string) => void) | undefined;
    }) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    allowClear?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: {
        light?: boolean | undefined;
        label?: React.ReactNode;
        mode?: "read" | undefined;
        proFieldKey?: string | undefined;
        render?: any;
    } | undefined;
} & import("antd").FormItemProps<any> & {
    popoverProps?: PopoverProps | undefined;
    colors?: string[] | undefined;
} & import("../../BaseForm/createField").ExtendsProps>;
export default _default;
