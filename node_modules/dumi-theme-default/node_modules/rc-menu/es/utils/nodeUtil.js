import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
import * as React from 'react';
import warning from "rc-util/es/warning";
import toArray from "rc-util/es/Children/toArray";
export function parseChildren(children, keyPath) {
  return toArray(children).map(function (child, index) {
    if ( /*#__PURE__*/React.isValidElement(child)) {
      var key = child.key;

      if (key === null || key === undefined) {
        key = "tmp_key-".concat([].concat(_toConsumableArray(keyPath), [index]).join('-'));

        if (process.env.NODE_ENV !== 'production') {
          warning(false, 'MenuItem or SubMenu should not leave undefined `key`.');
        }
      }

      return /*#__PURE__*/React.cloneElement(child, {
        key: key,
        eventKey: key
      });
    }

    return child;
  });
}